<!DOCTYPE html>
<html lang="en">
<link rel="stylesheet" href="/css/search.css">
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=ce54459ce01fd6e31cc81beb6a8ba76c&libraries=services,clusterer,drawing"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js" integrity="sha512-fD9DI5bZwQxOi7MhYWnnNPlvXdp/2Pj3XSTRrFs5FQa4mizyGLnJcN6tuvUS6LbmgN1ut+XGSABKvjN0H6Aoow==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<body>
  <main>
    <div class="search--container">
      <div id="map" style="margin-top: 2px;">
        <div class="map--search--form">
          <select id="myDropdown" class="myDropdown">
            <option value="">서울특별시</option>
          </select>

          <select id="gu" name="gu" onchange="onChangeSido()" class="myDropdown">
            <option value="">구</option>
            <% for (let i = 0; i < gu_options.length; i++) { %>
            <option value="<%= gu_options[i] %>"><%= gu_options[i] %></option>
            <% } %>
          </select>

          <select id="dong" name="dong" onchange="onChangeDong()" class="myDropdown">
            <option value="">동</option>
          </select>
          <!--<label for="name">Name:</label>-->
          <input type="text" id="agencyName" name="agencyName" autocomplete="off" onkeydown="if(event.keyCode==13) onClickAgencyName()"><br><br>
          <input type="submit" value="검색" id="search-submit" onclick="onClickAgencyName()">
        </div>
      </div>

      <div class="agency--container">
        <div style="margin-top: 25px;">
          <span>
            <span uk-icon="chevron-double-right"></span>
            부동산을 눌러 후기를 확인하세요 !</span>
        </div>

        <div class="agency--list" id="agency--list">

          <!-- 여기에 내용이 들어감.. -->

        </div>
      </div>
    </div>
  </main>
</body>
<script>
  var container = document.getElementById('map');
  var options = {
    center: new kakao.maps.LatLng(37.591682, 127.022124),
    level: 4
  };

  var map = new kakao.maps.Map(container, options);
  let markers = [];

  function onClickAgencyName() {
    const agencyName = document.getElementById('agencyName').value;
    const selectedGu = $('#gu').val();
    const selectedDong = $('#dong').val();

    initSearch();

    $.ajax({
      url: '/search/agencyName',
      type: 'GET',
      data: {
        sgg_nm: selectedGu,
        bjdong_nm: selectedDong,
        cmp_nm: agencyName
      },
      success: function(result) {
        console.log(result);
        const parentDiv = document.getElementById('agency--list');
        let geocoder = new kakao.maps.services.Geocoder();

        parentDiv.innerHTML = '';

        if (result.rows.length === 0) {
          document.getElementById('agency--list').innerText = "해당 지역엔 부동산이 없습니다.\n 다른 지역을 검색해보세요.";
        }

        for (let i = 0; i < result.rows.length; i++) {
          realtorCpnt(result.rows[i]); //사이드바에 공인중개사 출력 

          //지도에 여러 공인중개사 마커 출력 
          geocoder.addressSearch(result.rows[i].ADDRESS, callback);

          function callback(results, status) {
            if (status === kakao.maps.services.Status.OK) {
              realtorMarker(results, result.rows[i]);
            } else {
              console.log("좌표를 불러오는데 문제가 발생했습니다. (속도)");
            }
          };
        }
      },
      error: function(xhr, status, error) {
        console.error(error);
      }
    });

  }

  function onChangeSido() {
    const gu = document.getElementById('gu').value;
    document.getElementById('agencyName').value = "";

    // 두 번째 드롭다운 메뉴 초기화
    const dongSelect = document.getElementById('dong');
    dongSelect.innerHTML = '';

    // 선택된 시/도 값에 따라 두 번째 드롭다운 메뉴의 옵션 생성
    const blankOption = document.createElement('option');
    blankOption.value = "";
    blankOption.text = "";
    dongSelect.appendChild(blankOption);

    for (let i = 0; i < dongData[gu].length; i++) {
      const option = document.createElement('option');
      option.value = dongData[gu][i];
      option.text = dongData[gu][i];
      dongSelect.appendChild(option);
    }
  }

  function onChangeDong() {
    const selectedGu = $('#gu').val();
    const selectedDong = $('#dong').val();
    const searchParam = selectedGu + ' ' + selectedDong;

    document.getElementById('agency--list').innerText = "검색 진행 중... 잠시만 기다려주세요.";
    document.getElementById('agencyName').value = "";

    initSearch();

    $.ajax({
      url: '/search/agencies',
      type: 'GET',
      data: {
        sgg_nm: selectedGu,
        bjdong_nm: selectedDong
      },
      success: function(result) {
        // console.log(result);
        const parentDiv = document.getElementById('agency--list');
        let geocoder = new kakao.maps.services.Geocoder(); // 주소-좌표 변환 객체

        parentDiv.innerHTML = '';

        let mapCallback = function(result, status) {
          if (status === kakao.maps.services.Status.OK) {
            //좌표객체 LatLng생성하고 map의 위치를 이 좌표로 설정해주기.
            let coords = new kakao.maps.LatLng(result[0].y, result[0].x);
            map.setCenter(coords);
          }
        };

        geocoder.addressSearch(searchParam, mapCallback);

        if (result.rows.length === 0) {
          document.getElementById('agency--list').innerText = "해당 지역엔 부동산이 없습니다.\n 다른 지역을 검색해보세요.";
        }

        for (let i = 0; i < result.rows.length; i++) {
          realtorCpnt(result.rows[i]); //사이드바에 공인중개사 출력

          //지도에 여러 공인중개사 마커 출력
          geocoder.addressSearch(result.rows[i].ADDRESS, callback);

          function callback(results, status) {
            if (status === kakao.maps.services.Status.OK) {
              realtorMarker(results, result.rows[i]);
            } else {
              console.log("좌표를 불러오는데 문제가 발생했습니다. (속도)");
            }
          };
        }
      },
      error: function(xhr, status, error) {
        console.error(error);
      }
    });

  }

  function initSearch() {
    for (let i = 0; i < markers.length; i++) {
      markers[i].setMap(null);
    }
    markers.length = 0;
  }

  function realtorCpnt(row) {
    // 부모 element
    const parentDiv = document.getElementById('agency--list');

    // container div
    const containerDiv = document.createElement('div');
    containerDiv.classList.add('agency--m--container');

    // agency name div
    // 사용자가 클릭하면 realtor로 넘어가야함 (not agent)
    const nameDiv = document.createElement('div');
    nameDiv.classList.add('agency--name');
    nameDiv.id = 'agency--name';
    nameDiv.innerHTML = `<a href="/realtor/${row.SYS_REGNO}">${row.CMP_NM}</a>`;
    containerDiv.appendChild(nameDiv);

    // agency details div
    const detailsDiv = document.createElement('div');
    detailsDiv.classList.add('agency-details');

    // 별 3점 div
    const ratingDiv = document.createElement('div');
    ratingDiv.style.paddingLeft = '7px';
    ratingDiv.innerHTML = `<i class="fa-solid fa-star starr"></i> ${row.avg_rating}`;
    detailsDiv.appendChild(ratingDiv);

    // 후기 20개 div
    const reviewDiv = document.createElement('div');
    reviewDiv.style.paddingLeft = '7px';
    reviewDiv.style.paddingRight = '7px';
    reviewDiv.innerText = ` / 후기 ${row.countReview}개 /`;
    detailsDiv.appendChild(reviewDiv);

    // 친절하고 따뜻한 div
    const descriptionDiv = document.createElement('div');
    descriptionDiv.innerText = '친절하고 따뜻한';
    detailsDiv.appendChild(descriptionDiv);

    // container div를 parentDiv에 추가
    containerDiv.appendChild(detailsDiv);
    parentDiv.appendChild(containerDiv);
  }

  function realtorMarker(results, row) {
    //좌표객체 LatLng생성하고 map의 위치를 이 좌표로 설정해주기.
    let coords = new kakao.maps.LatLng(results[0].y, results[0].x);

    // 결과값으로 받은 위치를 마커로 표시합니다
    let marker = new kakao.maps.Marker({
      map: map,
      position: coords,
    });

    markers.push(marker);

    //인포윈도우를 생성합니다
    let infowindow = new kakao.maps.InfoWindow({
      position: coords,
      content: `<div class='custom-mark'> ${row.CMP_NM} </div>`,
    });

    kakao.maps.event.addListener(marker, 'mouseover', function() {
      infowindow.open(map, marker);
    });

    kakao.maps.event.addListener(marker, 'mouseout', function() {
      infowindow.close();
    });

    kakao.maps.event.addListener(marker, 'click', function() {
      const agencyName = document.getElementById('agencyName');
      agencyName.value = row.CMP_NM;
      infowindow.close();
      onClickAgencyName();
    });
  }
</script>

</html>